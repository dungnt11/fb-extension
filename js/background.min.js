function getOriginFromUrl(inp) {
    try {
        var url = new URL(inp);
        var full = url.protocol + '//' + url.hostname + (url.port ? ':' + url.port : '');
        return full;
    } catch (e) {
        return "";
    }
}

chrome.webRequest.onBeforeSendHeaders.addListener(
    function (info) {
        if (info.initiator == 'chrome-extension://' + chrome.runtime.id) {
            // console.log('info is');
            var originSet = null;
            var refererSet = null;
            var cookieSet = null;
            var originSet = null;
            var refererSet = null;
            for (var index = 0; index < info.requestHeaders.length; index++) {
                // console.log(info.requestHeaders[index].name);
                if (info.requestHeaders[index].name.toLowerCase() === 'origin') {
                    info.requestHeaders[index].value = getOriginFromUrl(info.url);
                    originSet = true;
                }
                if (info.requestHeaders[index].name.toLowerCase() === 'referer') {
                    info.requestHeaders[index].value = getOriginFromUrl(info.url);
                    refererSet = true;
                }
            }
            if (!originSet) {
                info.requestHeaders.push({
                    'name': 'Origin',
                    'value': getOriginFromUrl(info.url),
                });
            }
            if (!refererSet) {
                info.requestHeaders.push({
                    'name': 'Referer',
                    'value': getOriginFromUrl(info.url),
                });
            }
            return { requestHeaders: info.requestHeaders };
        }
    }, { urls: ['*://*.facebook.com/*'] }, ['blocking', 'requestHeaders', 'extraHeaders']
);


chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {
    if (request.type == "get") {
        var url = request.url;
        fetch(url)
            .then(response => response.text())
            .then(response => sendResponse(response))
            .catch()
        return true;
    }
    if (request.type == "post") {
        fetch(request.url, {
            method: 'POST',
            headers: {
                'Accept': 'application/json, application/xml, text/plain, text/html, *.*',
                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'
            },
            body: request.data
        })
            .then(response => response.text())
            .then(response => sendResponse(response))
            .catch(error => console.log('Error:', error));
        return true;
    }

    if (request.type == "post_upload") {
        // console.log(request.data)
        return true;
    }

    if (request.type == 'reload') {
        location.reload();
        return true;
    }
    return true;
});


chrome.browserAction.onClicked.addListener(function (e) {
    chrome.storage.sync.get(['policy'], function (result) {
        result.policy ? chrome.browserAction.setPopup({ popup: 'html/popup.html' }) : chrome.tabs.create({ url: chrome.extension.getURL("html/index.html?profile") });
    })
});
chrome.runtime.setUninstallURL('', function () {
    chrome.storage.sync.clear(function () {
        var error = chrome.runtime.lastError;
        if (error) {
        }
    });
})



